<rankers>
    <div class="cup-title">{props.cup.title}</div>
    <hr>
    <div class="search-box">
        <div class="inline-input">
            <i class="fas fa-search"></i>
            <div class="input" contenteditable></div>
        </div>
    </div>
    <hr>
    <div if={state.board} class="toggle-switch">
        <div class="toggle-button {team.isActive ? 'active' : ''}" each={team in state.board.teams} teamid="{team.id}">
            {team.name.replace(/チーム/,'')}
        </div>
    </div>
    <style scoped>
        .cup-title {
            font-family: sans-serif;
            font-size: 32pt;
        }

        hr {
            background-color: gray;
        }

        .search-box {
            width: 100%;
            padding-left: auto;
            padding-right: auto;
            padding-top : 25px;
            padding-bottom : 25px;
            font-size: 25pt;
            box-sizing: border-box;
        }

        .search-box>.inline-input {
            background-color: #ccc;
            box-sizing: border-box;
            border-radius: 15px;
            display: table;
            width: 100%;
            padding:5px;
            max-width: 500px;
        }
        .search-box > .inline-input > i {
            display: table-cell;
            width:46px;
            font-size:28pt;
            vertical-align: middle;
            color:#eee;
            padding-left: 15px;
        }
        .search-box > .inline-input > .input {
            display: table-cell;
            width:auto;
        }

        .toggle-switch {
            max-width:600px;
            width:100%;
            border:solid 1px #ccc;
            border-radius: 5px;
            overflow: hidden;
            box-sizing: border-box;
            display: table;
        }

        .toggle-button {
            background-color:white;
            display: inline-block;
            width:20%;
            box-sizing: border-box;
            display: table-cell;
            text-align: center;
            vertical-align: middle;
            border-right: solid 1px #ccc;
            cursor: pointer;
            height:50px;
        }

        .toggle-button:last-child{
            border-right: solid 0px;
            width:auto;
        }

        .toggle-button:hover {
            background-color:#eeeeee;
        }

        .toggle-button.active {
            background-color:#eee;
            font-weight: bold;
        }

    </style>
    <script>
        export default {
            async onMounted(props,state){
                this.update();
            },
            async onBeforeUpdate(props,state){
                let {cup} = props;
                if(state.cup === cup) return;
                state.cup = cup;
                state.board = null;
                state.board = await cup.getBoardInfomationLast();
                state.board.teams[0].isActive = true;
                this.update();
            }
        }
    </script>
</rankers>